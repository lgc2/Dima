- Dima.Core - Class Lib (Client/Server)
    - We can't have Entity Framework here because this lib will be in the client side too

- Dima.Pwa - Blazor WASM (Client)
    - Core

- Dima.Api - API (Server)
    - Core
    - Entity Framwork

dotnet new sln
dotnet new classlib -o Dima.Core
dotnet sln add ./Dima.Core/

dotnet new web -o Dima.Api
dotnet sln add ./Dima.Api/

/* within Dima.Api */

dotnet add package Microsoft.AspNetCore.OpenApi
dotnet add package Swashbuckle.AspNetCore

dotnet add reference ../Dima.Core/

dotnet add package Microsoft.EntityFrameworkCore.SqlServer
dotnet add package Microsoft.EntityFrameworkCore.Design

dotnet user-secrets init
dotnet user-secrets set "ConnectionStrings:DefaultConnection" "<secret>"
dotnet user-secrets clear --> clear all secrets

// migrations v1
dotnet tool install --global dotnet-ef
dotnet tool update --global dotnet-ef
dotnet ef migrations add v1
dotnet ef database update

dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore

// migrations v2
dotnet ef migrations add v2
dotnet ef database update
/* -------------- */

dotnet new blazorwasm -o Dima.Web --pwa
dotnet sln add ./Dima.Web/

/* within Dima.Web */
dotnet add package MudBlazor or dotnet add package MudBlazor --version 6.x.x
dotnet add package Microsoft.Extensions.Http
dotnet add reference ../Dima.Core/
dotnet add package Microsoft.AspNetCore.Components.WebAssembly.Authentication
/* -------------- */